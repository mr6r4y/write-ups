[
    [
        "mov rax, qword [r14]", 
        "mov rcx, qword [rax + 0xf0]", 
        "mov rsi, qword [rax + 8]", 
        "mov rdx, qword [rax + 0x98]", 
        "lea r8, rcx + rcx", 
        "mov rdi, rcx", 
        "lea rsi, rsi + rsi*2", 
        "shl rdi, 4", 
        "sub rdi, r8", 
        "imul rdi, rcx", 
        "sub rsi, rdi", 
        "lea rdi, rdx + rdx*2", 
        "lea rdx, rdx + rdi*4", 
        "add rsi, rdx", 
        "mov rdx, qword [rax]", 
        "mov r8, rdx", 
        "shl r8, 7", 
        "lea rdx, r8 + rdx*4", 
        "imul rdx, qword [rax + 0x120]", 
        "add rsi, rdx", 
        "mov rdx, qword [rax + 0x18]", 
        "lea r8, rdx*4", 
        "shl rdx, 6", 
        "sub rdx, r8", 
        "imul rdx, qword [rax + 0x110]", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0xd0]", 
        "mov r8, rsi", 
        "neg r8", 
        "lea rsi, rsi + r8*8", 
        "lea rdx, rdx + rsi*2", 
        "mov rsi, qword [rax + 0xe0]", 
        "mov r8, rsi", 
        "neg r8", 
        "lea rdx, rdx + r8*8", 
        "sub rdx, rsi", 
        "add rdi, rdx", 
        "mov rdx, qword [rax + 0x38]", 
        "lea rdx, rdx + rdx*4", 
        "lea rdx, rdi + rdx*2", 
        "sub rdx, qword [rax + 0x20]", 
        "add rcx, rdx", 
        "mov rdx, qword [rax + 0xe8]", 
        "mov rax, qword [rax + 0x150]", 
        "lea rsi, rdx + rdx*2", 
        "lea rdx, rdx + rsi*4", 
        "add rcx, rdx", 
        "lea rax, rcx + rax*8", 
        "cmp rax, 0x140277"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdi, qword [rax + 0x160]", 
        "mov rsi, qword [rax + 0x118]", 
        "mov rbx, qword [rax + 0xd8]", 
        "lea rdx, rdi + rdi*4", 
        "shl rdx, 2", 
        "mov rcx, rdx", 
        "mov rdx, qword [rax + 0x28]", 
        "imul rcx, qword [rax + 0xa0]", 
        "lea r8, rdx*4", 
        "shl rdx, 6", 
        "sub rdx, r8", 
        "imul rdx, rsi", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 8]", 
        "mov r8, rcx", 
        "shl rcx, 0xa", 
        "shl r8, 4", 
        "sub rcx, r8", 
        "imul rcx, qword [rax + 0x18]", 
        "imul rcx, qword [rax + 0x140]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0xe0]", 
        "lea rdi, rdx + rdi*8", 
        "mov rdx, rcx", 
        "neg rdx", 
        "shl rdx, 2", 
        "sub rdx, rcx", 
        "lea rcx, rdi + rdx*2", 
        "mov rdx, rsi", 
        "mov rdi, qword [rax + 0xd0]", 
        "neg rdx", 
        "lea rdx, rsi + rdx*8", 
        "add rdx, rcx", 
        "lea rcx, rbx + rbx", 
        "mov rbx, qword [rax + 0x48]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x88]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rdx, rdx + rsi*4", 
        "sub rdx, rcx", 
        "lea rcx, rdi*8", 
        "sub rdx, rcx", 
        "sub rdx, qword [rax + 0x90]", 
        "lea rcx, rbx*8", 
        "imul rax, qword [rax + 0x158], 0xfffffffffffffff5", 
        "sub rdx, rcx", 
        "add rdx, rax", 
        "cmp rdx, 0xffffffffb10b8de4"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov r8, qword [rax + 0x108]", 
        "mov rcx, qword [rax + 0xd0]", 
        "add rcx, qword [rax + 0x100]", 
        "mov rdi, qword [rax + 0x40]", 
        "imul rdx, r8, 0xb4", 
        "imul rdx, qword [rax + 0x120]", 
        "lea rsi, rcx*8", 
        "sub rsi, rcx", 
        "add rdx, rsi", 
        "mov rsi, rdx", 
        "mov rdx, qword [rax + 0x48]", 
        "add rsi, qword [rax + 0xc8]", 
        "lea rdx, rdx + rdx*2", 
        "mov rcx, rdx", 
        "shl rcx, 5", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x30]", 
        "imul rdx, qword [rax + 0x118]", 
        "add rdx, rsi", 
        "lea rsi, rcx + rcx*4", 
        "lea rcx, rcx + rsi*2", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x150]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*4", 
        "lea rcx, rdx + rcx*4", 
        "mov rdx, qword [rax + 0xd8]", 
        "shl rdx, 5", 
        "imul rdx, qword [rax + 0xb0]", 
        "sub rcx, rdx", 
        "mov rdx, rcx", 
        "mov rcx, qword [rax + 0x78]", 
        "mov rax, qword [rax + 0x20]", 
        "lea rcx, rcx + rcx*4", 
        "lea rsi, rdx + rcx*2", 
        "mov rdx, rdi", 
        "shl rdx, 4", 
        "mov rcx, rdx", 
        "sub rcx, rdi", 
        "add rdi, rdi", 
        "add rcx, rsi", 
        "sub rdx, rdi", 
        "lea rcx, rcx + rax*8", 
        "mov rax, r8", 
        "neg rax", 
        "shl rax, 2", 
        "sub rax, r8", 
        "lea rax, rcx + rax*2", 
        "add rdx, rax", 
        "cmp rdx, 0xde2f3"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rcx, qword [rax + 0x110]", 
        "mov rdx, qword [rax + 0x100]", 
        "mov rsi, qword [rax]", 
        "lea rdi, rcx + rcx*2", 
        "mov rcx, qword [rax + 0x138]", 
        "lea rcx, rcx + rcx*2", 
        "lea rdi, rdi + rcx*2", 
        "mov rcx, qword [rax + 0x130]", 
        "lea r8, rcx*4", 
        "shl rcx, 6", 
        "sub rcx, r8", 
        "mov r8, qword [rax + 0x108]", 
        "imul rcx, rdx", 
        "sub rdi, rcx", 
        "mov rcx, qword [rax + 0x78]", 
        "lea rcx, rcx + rcx*2", 
        "add rdi, rcx", 
        "imul rcx, qword [rax + 0x18], 0xfffffffffffffff3", 
        "add rdi, rcx", 
        "mov rcx, r8", 
        "shl rcx, 4", 
        "sub rcx, r8", 
        "add rcx, rdi", 
        "lea rdi, rdx*4", 
        "shl rdx, 6", 
        "sub rdx, rdi", 
        "imul rdx, qword [rax + 0x30]", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0xf0]", 
        "mov rdi, rcx", 
        "neg rdi", 
        "lea rdx, rdx + rdi*4", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x120]", 
        "mov rdi, rcx", 
        "neg rdi", 
        "lea rdx, rdx + rdi*8", 
        "sub rdx, rcx", 
        "sub rdx, qword [rax + 0x58]", 
        "mov rcx, qword [rax + 0x118]", 
        "lea rdx, rdx + rcx*8", 
        "mov rcx, qword [rax + 0x68]", 
        "lea rax, rcx + rcx*2", 
        "lea rax, rcx + rax*4", 
        "add rdx, rax", 
        "mov rax, rsi", 
        "shl rax, 4", 
        "sub rax, rsi", 
        "add rdx, rax", 
        "lea rax, rsi*8", 
        "sub rax, rsi", 
        "add rax, rdx", 
        "cmp rax, 0xfffffffffffe2c60"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0x18]", 
        "mov r8, qword [rax + 0xe0]", 
        "mov rdi, qword [rax + 0x58]", 
        "mov rsi, qword [rax + 0x28]", 
        "lea rcx, rdx + rdx*4", 
        "mov rdx, qword [rax]", 
        "lea rdx, rdx + rcx*2", 
        "mov rcx, qword [rax + 0x10]", 
        "lea r9, rcx + rcx*4", 
        "lea rcx, rcx + r9*4", 
        "shl rcx, 2", 
        "imul rcx, qword [rax + 0x68]", 
        "sub rdx, rcx", 
        "mov rcx, rdx", 
        "mov rdx, r8", 
        "shl rdx, 4", 
        "imul rdx, qword [rax + 0xd8]", 
        "add rdx, rcx", 
        "lea rcx, r8 + r8*2", 
        "lea rdx, rdx + rcx*4", 
        "lea rcx, rdx + rdi*2", 
        "mov rdx, qword [rax + 0x140]", 
        "mov r8, rdx", 
        "neg r8", 
        "lea rdx, rdx + r8*8", 
        "lea rcx, rcx + rdx*2", 
        "mov rdx, qword [rax + 0x100]", 
        "mov r8, rdx", 
        "neg r8", 
        "lea rdx, rdx + r8*4", 
        "mov r8, qword [rax + 0x50]", 
        "lea rdx, rcx + rdx*4", 
        "mov rcx, rdx", 
        "add rcx, qword [rax + 0x40]", 
        "mov rdx, r8", 
        "shl rdx, 4", 
        "sub rdx, r8", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0xb8]", 
        "mov rax, rcx", 
        "neg rax", 
        "lea rax, rdx + rax*4", 
        "mov rdx, rdi", 
        "neg rdx", 
        "sub rax, rcx", 
        "lea rcx, rdi + rdx*4", 
        "lea rdx, rax + rcx", 
        "mov rax, rsi", 
        "neg rax", 
        "shl rax, 2", 
        "sub rax, rsi", 
        "add rax, rdx", 
        "lea rdx, rsi + rsi*8", 
        "add rax, rdx", 
        "cmp rax, 0xfffffffffff20d05"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rcx, qword [rax + 0xd0]", 
        "mov rsi, qword [rax + 0x90]", 
        "mov rdx, qword [rax + 0x108]", 
        "lea rdi, rcx + rcx*4", 
        "lea rcx, rcx + rdi*4", 
        "lea rdi, rsi + rsi*2", 
        "shl rcx, 2", 
        "imul rcx, rsi", 
        "lea rsi, rsi + rdi*4", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0xf8]", 
        "lea rdi, rsi + rsi*4", 
        "lea rsi, rsi + rdi*2", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x38]", 
        "mov rdi, rsi", 
        "neg rdi", 
        "lea rsi, rsi + rdi*4", 
        "lea rsi, rcx + rsi*4", 
        "mov rcx, qword [rax + 0x150]", 
        "lea rdi, rcx + rcx", 
        "shl rcx, 4", 
        "sub rcx, rdi", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0xb8]", 
        "lea rsi, rsi + rsi*2", 
        "lea rcx, rcx + rsi*2", 
        "imul rsi, qword [rax + 0xc0], 0x4ec", 
        "imul rsi, rdx", 
        "imul rsi, qword [rax + 0xa0]", 
        "sub rcx, rsi", 
        "imul rsi, qword [rax + 0x88], 0x62", 
        "imul rsi, qword [rax + 0x160]", 
        "sub rcx, rsi", 
        "imul rsi, qword [rax + 0x158], 0x10e", 
        "imul rdx, rsi", 
        "imul rdx, qword [rax + 0x148]", 
        "mov rax, qword [rax + 0x40]", 
        "lea rax, rax + rax*4", 
        "add rdx, rcx", 
        "lea rax, rdx + rax*2", 
        "cmp rax, 0xffffffffd62b3104"
    ], 
    [
        "mov rdx, qword [r14]", 
        "imul rsi, qword [rdx], 0x4e", 
        "mov rcx, qword [rdx + 0x120]", 
        "mov rdi, qword [rdx + 0x140]", 
        "mov r8, qword [rdx + 0x100]", 
        "imul rsi, qword [rdx + 0x130]", 
        "mov rax, rcx", 
        "mov r10, rdi", 
        "neg rax", 
        "neg r10", 
        "lea r9, rcx + rax*8", 
        "mov rax, qword [rdx + 0x110]", 
        "add rsi, r9", 
        "lea rsi, rsi + r10*8", 
        "sub rsi, rdi", 
        "lea rdi, rax + rax*4", 
        "imul rax, rax, 0x230", 
        "add rdi, rdi", 
        "imul rdi, qword [rdx + 0x150]", 
        "imul rax, qword [rdx + 0x70]", 
        "imul rax, qword [rdx + 0x68]", 
        "sub rsi, rdi", 
        "lea rdi, rcx + rcx*8", 
        "add rsi, rdi", 
        "add r9, rsi", 
        "add rcx, r9", 
        "add rax, rcx", 
        "imul rcx, qword [rdx + 0xb8], 0xfffffffffffffff5", 
        "sub rax, r8", 
        "mov rdx, qword [rdx + 0x118]", 
        "add rax, rcx", 
        "lea rcx, r8 + r8*4", 
        "lea rcx, r8 + rcx*2", 
        "add rcx, rax", 
        "mov rax, rdx", 
        "shl rax, 4", 
        "sub rax, rdx", 
        "add rax, rcx", 
        "cmp rax, 0x30028587"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0x10]", 
        "mov rdx, qword [rax + 0x98]", 
        "mov rdi, qword [rax + 0x70]", 
        "lea rcx, rsi + rsi*2", 
        "lea rcx, rdx + rcx*2", 
        "mov rdx, qword [rax + 0x120]", 
        "lea rdx, rdx + rdx*2", 
        "shl rdx, 4", 
        "imul rdx, qword [rax + 0x88]", 
        "lea rcx, rdx + rcx*2", 
        "mov rdx, qword [rax + 0x130]", 
        "lea r8, rdx + rdx", 
        "shl rdx, 4", 
        "sub rdx, r8", 
        "imul rdx, rdi", 
        "sub rcx, rdx", 
        "mov rdx, qword [rax + 0x78]", 
        "lea r8, rdx + rdx*4", 
        "lea rdx, rdx + r8*2", 
        "lea rdx, rdx + rdx*4", 
        "imul rdx, qword [rax + 0x160]", 
        "add rcx, rdx", 
        "lea rdx, rsi + rsi*4", 
        "lea rdx, rsi + rdx*2", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x30]", 
        "lea rcx, rcx + rcx*2", 
        "shl rcx, 2", 
        "imul rdi, rcx", 
        "mov rcx, qword [rax + 0x58]", 
        "sub rdx, rdi", 
        "lea rdx, rdx + rcx*8", 
        "sub rdx, rcx", 
        "mov rcx, rdx", 
        "mov rdx, qword [rax + 0x90]", 
        "lea rsi, rdx + rdx*2", 
        "lea rdx, rdx + rsi*4", 
        "mov rsi, qword [rax + 0x20]", 
        "imul rdx, qword [rax + 0xb8]", 
        "add rdx, rcx", 
        "mov rcx, rsi", 
        "neg rcx", 
        "shl rcx, 2", 
        "sub rcx, rsi", 
        "lea rcx, rdx + rcx*2", 
        "mov rdx, qword [rax + 0xa8]", 
        "lea rax, rdx + rdx*2", 
        "add rax, rcx", 
        "cmp rax, 0xf0be6"
    ], 
    [
        "mov rdx, qword [r14]", 
        "mov rdi, qword [rdx + 0x10]", 
        "mov rsi, qword [rdx + 0x150]", 
        "mov rcx, qword [rdx + 0xa0]", 
        "mov r8, qword [rdx + 0xc0]", 
        "mov rbx, qword [rdx + 0xf8]", 
        "lea rax, rdi*8", 
        "lea r9, rcx + rcx", 
        "sub rax, rdi", 
        "mov rdi, rsi", 
        "neg rdi", 
        "lea rdi, rsi + rdi*8", 
        "lea rax, rax + rdi*2", 
        "lea rdi, r8*4", 
        "sub rax, rdi", 
        "lea rdi, r9 + rcx", 
        "lea rdi, rcx + rdi*4", 
        "add rax, rdi", 
        "mov rdi, qword [rdx + 0x128]", 
        "lea rdi, rax + rdi*8", 
        "imul rax, qword [rdx + 0x120], 0x4e", 
        "imul rax, qword [rdx + 0x98]", 
        "add rax, rdi", 
        "mov rdi, r8", 
        "shl rdi, 6", 
        "sub rdi, r8", 
        "imul rsi, rdi", 
        "sub rax, rsi", 
        "sub rax, qword [rdx + 0x90]", 
        "lea rsi, rbx*4", 
        "sub rax, r9", 
        "sub rax, rsi", 
        "mov rsi, qword [rdx + 0x78]", 
        "lea rsi, rax + rsi*4", 
        "mov rax, qword [rdx + 0x130]", 
        "mov rdx, qword [rdx + 0xd0]", 
        "lea rax, rax + rax*4", 
        "shl rdx, 2", 
        "lea rsi, rsi + rax*2", 
        "lea rax, rcx*8", 
        "sub rax, rcx", 
        "add rax, rsi", 
        "sub rax, rdx", 
        "cmp rax, 0xfffffffffff8cf5d"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0xa0]", 
        "mov r8, qword [rax + 0x78]", 
        "mov rdx, qword [rax + 0x148]", 
        "mov rdi, qword [rax + 0x20]", 
        "mov rcx, rsi", 
        "neg rcx", 
        "shl rcx, 3", 
        "sub rcx, rsi", 
        "lea rcx, rcx + r8*4", 
        "sub rcx, qword [rax + 0xc8]", 
        "mov r8, qword [rax + 0x60]", 
        "sub rcx, rdx", 
        "mov rsi, rcx", 
        "mov rcx, r8", 
        "shl rcx, 4", 
        "sub rcx, r8", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0xe8]", 
        "lea rsi, rsi + rsi*2", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x68]", 
        "mov r8, rsi", 
        "neg r8", 
        "lea rsi, rsi + r8*4", 
        "lea rcx, rcx + rsi*2", 
        "mov rsi, qword [rax + 0x48]", 
        "lea rcx, rcx + rsi*4", 
        "mov rsi, qword [rax + 0xe0]", 
        "lea rsi, rsi + rsi*2", 
        "shl rsi, 3", 
        "imul rsi, rdi", 
        "sub rcx, rsi", 
        "mov rsi, rcx", 
        "mov rcx, rdi", 
        "shl rcx, 7", 
        "lea rcx, rcx + rdi*2", 
        "imul rdx, rcx", 
        "add rdx, rsi", 
        "add rdx, qword [rax + 0xd8]", 
        "mov rcx, rdx", 
        "mov rdx, qword [rax + 0x18]", 
        "lea rsi, rdx + rdx", 
        "shl rdx, 4", 
        "sub rdx, rsi", 
        "add rdx, rcx", 
        "add rdx, qword [rax + 0x158]", 
        "mov rcx, qword [rax]", 
        "lea rax, rdx + rcx*8", 
        "sub rax, rcx", 
        "cmp rax, 0x8e9d8"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rcx, qword [rax + 0x90]", 
        "mov rbx, qword [rax + 0xb0]", 
        "mov rdx, qword [rax + 0xe8]", 
        "mov rsi, qword [rax + 0x70]", 
        "lea rdi, rcx + rcx*4", 
        "lea rcx, rcx + rdi*2", 
        "lea rdi, rbx*8", 
        "mov rbx, qword [rax + 8]", 
        "sub rcx, rdi", 
        "mov rdi, qword [rax + 0x88]", 
        "lea rdi, rcx + rdi*4", 
        "mov rcx, rdx", 
        "neg rcx", 
        "shl rcx, 3", 
        "sub rcx, rdx", 
        "add rcx, rdi", 
        "lea rdi, rbx*8", 
        "lea rcx, rcx + rsi*8", 
        "imul rsi, rsi, 0xfffffffffffffff5", 
        "sub rcx, rdi", 
        "mov rdi, qword [rax + 0x130]", 
        "mov r8, rdi", 
        "neg r8", 
        "lea rdi, rdi + r8*4", 
        "lea rcx, rcx + rdi*4", 
        "mov rdi, qword [rax + 0xd0]", 
        "lea rcx, rcx + rdi*2", 
        "add rsi, rcx", 
        "mov rcx, qword [rax + 0x18]", 
        "lea rcx, rcx + rcx*2", 
        "lea rdi, rsi + rcx*2", 
        "mov rsi, qword [rax + 0x118]", 
        "lea rcx, rsi + rsi*2", 
        "imul rcx, qword [rax + 0x138]", 
        "add rcx, rdi", 
        "mov rdi, qword [rax + 0x80]", 
        "mov rsi, rdi", 
        "neg rsi", 
        "shl rsi, 2", 
        "sub rsi, rdi", 
        "lea rsi, rcx + rsi*2", 
        "mov rcx, qword [rax + 0xa8]", 
        "mov rax, qword [rax + 0x150]", 
        "lea rdi, rcx + rcx*4", 
        "lea rcx, rcx + rdi*2", 
        "add rcx, rcx", 
        "imul rdx, rcx", 
        "lea rcx, rax + rax", 
        "shl rax, 4", 
        "sub rax, rcx", 
        "add rdx, rsi", 
        "add rax, rdx", 
        "cmp rax, 0x49c9f"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rcx, qword [rax + 0x80]", 
        "mov r8, qword [rax + 0x48]", 
        "mov rsi, qword [rax + 0x18]", 
        "mov rdi, qword [rax + 0xf0]", 
        "imul rdx, rcx, 0x168", 
        "lea rsi, rsi + rsi*8", 
        "imul rdx, r8", 
        "imul rdx, qword [rax + 0x138]", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x130]", 
        "mov r9, rsi", 
        "neg r9", 
        "lea rsi, rsi + r9*8", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x148]", 
        "mov r9, rsi", 
        "neg r9", 
        "lea rsi, rsi + r9*8", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0xc0]", 
        "lea rsi, rsi + rsi*2", 
        "lea rsi, rdx + rsi*2", 
        "imul rdx, qword [rax + 0x70], 0xfffffffffffffff3", 
        "add rsi, rdx", 
        "mov rdx, qword [rax + 0x10]", 
        "sub rsi, rdi", 
        "lea r9, rdx + rdx*8", 
        "mov rdx, r9", 
        "shl rdx, 4", 
        "sub rdx, r9", 
        "imul rcx, rdx", 
        "mov rdx, r8", 
        "neg rdx", 
        "shl rdx, 3", 
        "sub rdx, r8", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x118]", 
        "add rdx, rcx", 
        "mov rcx, rsi", 
        "shl rcx, 4", 
        "sub rcx, rsi", 
        "add rdx, rcx", 
        "lea rcx, rdx + rdi*4", 
        "mov rdx, qword [rax + 0x50]", 
        "mov rsi, rdx", 
        "shl rdx, 7", 
        "shl rsi, 4", 
        "sub rdx, rsi", 
        "imul rdx, qword [rax + 0xb8]", 
        "mov rax, rcx", 
        "sub rax, rdx", 
        "cmp rax, 0x714d626"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax]", 
        "mov rdi, qword [rax + 0xe8]", 
        "mov rbx, qword [rax + 0x108]", 
        "mov rsi, qword [rax + 0x60]", 
        "lea rdx, rdx + rdx*2", 
        "lea rcx, rdi*4", 
        "mov rdi, qword [rax + 0x150]", 
        "shl rdx, 2", 
        "imul rdx, qword [rax + 0x130]", 
        "sub rdx, rcx", 
        "sub rdx, qword [rax + 0x50]", 
        "lea rcx, rdi + rdi", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0xd0]", 
        "lea rcx, rdx + rcx*4", 
        "lea rdx, rbx*8", 
        "sub rcx, rdx", 
        "mov rdx, rsi", 
        "neg rdx", 
        "shl rdx, 2", 
        "sub rdx, rsi", 
        "lea rcx, rcx + rdx*2", 
        "imul rdx, qword [rax + 0x158], 0xfffffffffffffff3", 
        "add rcx, rdx", 
        "imul rdx, qword [rax + 0xd8], 0x96", 
        "imul rdx, qword [rax + 0xe0]", 
        "add rcx, rdx", 
        "mov rdx, qword [rax + 0xc0]", 
        "lea rdx, rdx + rdx*8", 
        "add rdx, rdx", 
        "imul rdx, qword [rax + 0x138]", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0xc8]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*4", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 8]", 
        "mov rax, qword [rax + 0xa0]", 
        "lea rsi, rcx + rcx*2", 
        "lea rcx, rcx + rsi*4", 
        "add rdx, rcx", 
        "lea rcx, rax + rax*2", 
        "lea rax, rax + rcx*4", 
        "add rax, rdx", 
        "cmp rax, 0x1992a4"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0x68]", 
        "mov r10, qword [rax + 0x158]", 
        "mov r9, qword [rax + 0xb8]", 
        "mov rsi, qword [rax + 0x30]", 
        "mov r8, qword [rax + 0xa0]", 
        "mov rdi, qword [rax + 0x90]", 
        "lea rcx, rdx + rdx*4", 
        "lea rdx, rdx + rcx*2", 
        "add rdx, qword [rax + 0x80]", 
        "mov rcx, r10", 
        "shl rcx, 4", 
        "sub rcx, r10", 
        "add rdx, rcx", 
        "mov rcx, r9", 
        "shl rcx, 4", 
        "sub rcx, r9", 
        "imul rcx, rsi", 
        "add rcx, rdx", 
        "mov rdx, r8", 
        "neg rdx", 
        "lea rdx, r8 + rdx*4", 
        "lea r8, r8 + r8*8", 
        "lea rcx, rcx + rdx*2", 
        "lea rdx, r9 + r9*4", 
        "add rdx, rdx", 
        "imul rdx, qword [rax + 0x40]", 
        "sub rcx, rdx", 
        "mov rdx, rcx", 
        "mov rcx, qword [rax + 0x128]", 
        "lea rcx, rcx + rcx*4", 
        "add rdx, rcx", 
        "mov rcx, r8", 
        "shl rcx, 4", 
        "sub rcx, r8", 
        "imul rsi, rcx", 
        "mov rcx, rdi", 
        "neg rcx", 
        "lea rcx, rdi + rcx*4", 
        "add rsi, rdx", 
        "mov rdx, qword [rax + 0x98]", 
        "lea rdx, rdx + rdx*4", 
        "lea rdx, rsi + rdx*2", 
        "lea rcx, rdx + rcx*2", 
        "mov rdx, qword [rax + 0x10]", 
        "mov rax, qword [rax + 0x108]", 
        "lea rsi, rdx + rdx", 
        "shl rdx, 4", 
        "sub rdx, rsi", 
        "add rdx, rcx", 
        "mov rcx, rax", 
        "neg rcx", 
        "add rdx, rdi", 
        "lea rax, rax + rcx*4", 
        "lea rax, rdx + rax*4", 
        "cmp rax, 0x145822"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0xc0]", 
        "mov rdi, qword [rax + 0x100]", 
        "mov rcx, qword [rax]", 
        "mov rbx, qword [rax + 0x98]", 
        "mov r8, qword [rax + 0xa0]", 
        "imul rdx, rsi, 0x9c", 
        "mov r9, rdi", 
        "lea rsi, rsi + rsi*4", 
        "imul rdx, qword [rax + 0x30]", 
        "neg r9", 
        "lea rdx, rdx + r9*4", 
        "mov r9, qword [rax + 8]", 
        "sub rdx, rdi", 
        "mov rdi, qword [rax + 0x138]", 
        "lea rdi, rdx + rdi*2", 
        "lea rdx, r9 + r9*8", 
        "mov r9, qword [rax + 0x48]", 
        "add rdi, rdx", 
        "lea rdx, rcx + rcx*8", 
        "add rdi, rdx", 
        "mov rdx, r9", 
        "shl rdx, 4", 
        "sub rdx, r9", 
        "add rdx, rdi", 
        "lea rdx, rdx + rsi*2", 
        "lea rsi, rbx*4", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0xb8]", 
        "lea rdx, rdx + r8*8", 
        "mov rdi, rsi", 
        "lea rdx, rdx + r8*4", 
        "neg rdi", 
        "lea rdx, rdx + rdi*8", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0x140]", 
        "lea rdi, rsi + rsi*2", 
        "lea rdi, rsi + rdi*4", 
        "lea rsi, rdx + rdi", 
        "mov rdx, qword [rax + 0xe8]", 
        "mov rax, qword [rax + 0x120]", 
        "mov rdi, rdx", 
        "neg rdi", 
        "lea rdx, rdx + rdi*8", 
        "add rdx, rsi", 
        "mov rsi, rax", 
        "neg rsi", 
        "lea rax, rax + rsi*4", 
        "add rax, rdx", 
        "mov rdx, rcx", 
        "neg rdx", 
        "lea rdx, rcx + rdx*4", 
        "lea rax, rax + rdx*4", 
        "cmp rax, 0x163ebe"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0x48]", 
        "mov rdx, qword [rax + 0x90]", 
        "mov rbx, qword [rax + 0x30]", 
        "lea rcx, rsi*8", 
        "sub rcx, rsi", 
        "mov rsi, rcx", 
        "mov rcx, qword [rax + 0xf0]", 
        "mov rdi, rcx", 
        "neg rdi", 
        "shl rdi, 4", 
        "add rcx, rdi", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x120]", 
        "lea rdi, rsi + rsi*2", 
        "lea rsi, rsi + rdi*4", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x158]", 
        "mov rdi, rsi", 
        "neg rdi", 
        "lea rsi, rsi + rdi*4", 
        "lea rdi, rcx + rsi*4", 
        "mov rsi, qword [rax + 0x140]", 
        "lea rcx, rsi + rsi*4", 
        "lea rcx, rsi + rcx*2", 
        "mov rsi, rdx", 
        "neg rsi", 
        "lea rsi, rdx + rsi*4", 
        "add rcx, rdi", 
        "imul rdx, rdx, 0xfffffffffffffff5", 
        "lea rsi, rcx + rsi*4", 
        "mov rcx, qword [rax + 0x60]", 
        "lea rcx, rcx + rcx*2", 
        "lea rcx, rsi + rcx*4", 
        "add rdx, rcx", 
        "mov rcx, qword [rax]", 
        "lea rsi, rcx + rcx*2", 
        "lea rcx, rcx + rsi*4", 
        "shl rcx, 3", 
        "imul rcx, qword [rax + 0x20]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 8]", 
        "mov rsi, rcx", 
        "shl rsi, 7", 
        "lea rcx, rsi + rcx*4", 
        "imul rcx, qword [rax + 0xa0]", 
        "sub rdx, rcx", 
        "lea rcx, rbx*8", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x98]", 
        "lea rdx, rdx + rcx*8", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x28]", 
        "mov rax, qword [rax + 0x70]", 
        "lea rsi, rcx + rcx*2", 
        "lea rax, rax + rax*4", 
        "lea rcx, rcx + rsi*4", 
        "add rdx, rcx", 
        "add rax, rdx", 
        "cmp rax, 0xffffffffffd89832"
    ], 
    [ 
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0xe8]", 
        "mov rdx, qword [rax + 0xf0]", 
        "add rdx, qword [rax + 0xf8]", 
        "mov rcx, qword [rax + 0xa8]", 
        "lea rdi, rsi*4", 
        "sub rdx, rdi", 
        "mov rdi, qword [rax + 0x20]", 
        "lea rdx, rdx + rdi*8", 
        "sub rdx, rdi", 
        "imul rdi, rsi, 0xd2", 
        "imul rdi, qword [rax + 0x120]", 
        "sub rdx, rdi", 
        "imul rdi, qword [rax + 8], 0xfffffffffffffff3", 
        "add rdx, rdi", 
        "lea rdi, rcx + rcx*2", 
        "add rdx, rdi", 
        "mov rdi, qword [rax + 0x128]", 
        "mov r8, rdi", 
        "neg r8", 
        "lea rdi, rdi + r8*8", 
        "lea rdx, rdx + rdi*2", 
        "mov rdi, qword [rax + 0x160]", 
        "lea rdi, rdi + rdi*2", 
        "add rdi, rdi", 
        "imul rcx, rdi", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x90]", 
        "lea rdi, rcx + rcx*4", 
        "lea rcx, rcx + rdi*2", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x138]", 
        "add rcx, rcx", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x140]", 
        "mov rax, qword [rax + 0x118]", 
        "lea rcx, rcx + rcx*8", 
        "add rdx, rcx", 
        "lea rdx, rdx + rsi*8", 
        "lea rax, rdx + rax*4", 
        "cmp rax, 0xffffffffffe82799"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov r8, qword [rax + 0x120]", 
        "mov rdx, qword [rax + 0x98]", 
        "mov rcx, qword [rax + 0xf8]", 
        "mov rdi, qword [rax + 0x60]", 
        "mov rsi, qword [rax]", 
        "mov r9, r8", 
        "lea rdx, rdx + rdx*2", 
        "shl r9, 7", 
        "lea r8, r9 + r8*2", 
        "add rdx, rdx", 
        "imul r8, qword [rax + 0x38]", 
        "sub rdx, r8", 
        "mov r8, qword [rax + 0x140]", 
        "lea r8, r8 + r8*2", 
        "lea r8, rdx + r8*4", 
        "lea rdx, rcx + rcx*4", 
        "lea rdx, rcx + rdx*4", 
        "add rdx, rdx", 
        "imul rdx, rdi", 
        "sub r8, rdx", 
        "mov rdx, r8", 
        "mov r8, qword [rax + 0x10]", 
        "lea rdx, rdx + r8*4", 
        "lea r8, rsi + rsi*4", 
        "lea r8, rdx + r8*2", 
        "lea rdx, rcx + rcx*2", 
        "add r8, rdx", 
        "mov rdx, qword [rax + 0xe0]", 
        "lea rdx, rdx + rdx*2", 
        "mov rcx, rdx", 
        "shl rcx, 5", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0xc0]", 
        "imul rdx, qword [rax + 0x50]", 
        "lea rcx, rcx + rcx*4", 
        "shl rcx, 3", 
        "imul rcx, qword [rax + 0x110]", 
        "mov rax, qword [rax + 0x28]", 
        "add rdx, r8", 
        "shl rax, 3", 
        "sub rdx, rcx", 
        "sub rdx, rax", 
        "lea rax, rsi*8", 
        "add rdi, rdx", 
        "sub rax, rsi", 
        "lea rax, rdi + rax", 
        "cmp rax, 0xfffffffffff025d7"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdi, qword [rax + 0x148]", 
        "mov rsi, qword [rax + 8]", 
        "mov rcx, qword [rax + 0xb0]", 
        "mov rbx, qword [rax + 0x60]", 
        "mov rdx, rdi", 
        "shl rdx, 4", 
        "lea r8, rcx + rcx*4", 
        "lea rcx, rcx + rcx*2", 
        "sub rdx, rdi", 
        "imul rdx, rsi", 
        "shl rcx, 3", 
        "imul rcx, qword [rax + 0xf8]", 
        "add r8, rdx", 
        "mov rdx, qword [rax + 0xc8]", 
        "mov r9, rdx", 
        "neg r9", 
        "shl r9, 4", 
        "add rdx, r9", 
        "add rdx, r8", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x18]", 
        "lea rcx, rcx + rcx*8", 
        "add rdx, rcx", 
        "lea rcx, rbx*4", 
        "sub rdx, rcx", 
        "lea rcx, rdi + rdi*4", 
        "mov rdi, qword [rax + 0x20]", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x160]", 
        "lea rcx, rcx + rcx*8", 
        "shl rcx, 2", 
        "imul rcx, qword [rax + 0x80]", 
        "sub rdx, rcx", 
        "mov rcx, rdi", 
        "add rdx, qword [rax + 0xb8]", 
        "neg rcx", 
        "shl rcx, 2", 
        "sub rcx, rdi", 
        "lea rdi, rdx + rcx*2", 
        "mov rcx, qword [rax + 0x40]", 
        "mov rax, qword [rax + 0x110]", 
        "lea rdx, rcx + rcx*8", 
        "lea rcx, rax + rax*2", 
        "mov rax, rcx", 
        "add rdx, rdi", 
        "shl rax, 4", 
        "sub rax, rcx", 
        "imul rsi, rax", 
        "mov rax, rdx", 
        "sub rax, rsi", 
        "cmp rax, 0xfffffffffff1e6fb"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0x20]", 
        "mov rsi, qword [rax + 0x50]", 
        "mov rdi, qword [rax + 0x140]", 
        "mov rbx, qword [rax + 0xc0]", 
        "mov rcx, qword [rax + 0x28]", 
        "lea rsi, rdx + rsi*2", 
        "mov rdx, qword [rax + 0x80]", 
        "mov r8, rdx", 
        "shl r8, 7", 
        "lea rdx, r8 + rdx*4", 
        "imul rdx, qword [rax + 0x118]", 
        "sub rsi, rdx", 
        "mov rdx, rdi", 
        "shl rdx, 7", 
        "lea rdx, rdx + rdi*2", 
        "imul rdx, qword [rax + 0x108]", 
        "add rsi, rdx", 
        "mov rdx, qword [rax + 0xb8]", 
        "lea r8, rdx + rdx*4", 
        "mov rdx, r8", 
        "shl rdx, 4", 
        "sub rdx, r8", 
        "imul rdx, qword [rax + 0x70]", 
        "add rdx, rsi", 
        "lea rsi, rbx + rbx", 
        "mov rbx, qword [rax + 0xd0]", 
        "sub rdx, rsi", 
        "mov rsi, rcx", 
        "shl rsi, 4", 
        "sub rsi, rcx", 
        "shl rcx, 3", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x100]", 
        "mov r8, rsi", 
        "neg r8", 
        "lea rsi, rsi + r8*4", 
        "lea rdx, rdx + rsi*2", 
        "lea rsi, rbx + rbx", 
        "sub rdx, rsi", 
        "lea rsi, rdx + rdi*4", 
        "imul rdx, qword [rax + 0x78], 0xfffffffffffffff5", 
        "mov rax, qword [rax + 0x98]", 
        "add rdx, rsi", 
        "lea rax, rdx + rax*4", 
        "sub rax, rcx", 
        "cmp rax, 0xd120a"
    ], 
    [
        "mov rax, qword [r14]", 
        "imul rdx, qword [rax + 0x90], 0x5a", 
        "mov rcx, rdx", 
        "mov rdx, qword [rax + 0x80]", 
        "imul rcx, qword [rax + 0x98]", 
        "shl rdx, 4", 
        "imul rdx, qword [rax + 0xd8]", 
        "add rdx, rcx", 
        "imul rcx, qword [rax + 0xe0], 0x46", 
        "imul rcx, qword [rax + 0x148]", 
        "imul rcx, qword [rax + 0x160]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x138]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "shl rsi, 4", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0xf8]", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x40]", 
        "lea rcx, rdx + rcx*2", 
        "lea rdx, rsi + rsi*4", 
        "add rcx, rdx", 
        "mov rdx, qword [rax + 0x130]", 
        "lea rsi, rdx + rdx*4", 
        "lea rdx, rsi*8", 
        "sub rdx, rsi", 
        "imul rdx, qword [rax + 0x150]", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x38]", 
        "lea rcx, rcx + rcx*4", 
        "lea rdx, rdx + rcx*2", 
        "mov rcx, qword [rax + 0x60]", 
        "lea rdx, rdx + rcx*2", 
        "mov rcx, qword [rax + 0xe8]", 
        "mov rax, qword [rax + 0xa0]", 
        "lea rdx, rdx + rcx*8", 
        "lea rax, rdx + rax*4", 
        "cmp rax, 0xfffffffffcd1d3b8"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rbx, qword [rax + 0xe8]", 
        "mov rdi, qword [rax + 0x90]", 
        "mov rcx, qword [rax + 0xa8]", 
        "mov r8, qword [rax + 8]", 
        "mov rsi, qword [rax + 0x88]", 
        "lea rdx, rbx + rbx", 
        "sub rdx, rdi", 
        "sub rdx, rcx", 
        "lea r9, r8 + rdx*4", 
        "mov r8, qword [rax + 0x60]", 
        "lea rdx, r8 + r8*4", 
        "shl rdx, 3", 
        "sub rdx, r8", 
        "lea r8, rcx + rcx", 
        "shl rcx, 5", 
        "imul rdx, qword [rax + 0xe0]", 
        "sub rcx, r8", 
        "imul rcx, qword [rax + 0xb0]", 
        "imul rcx, qword [rax + 0x120]", 
        "add rdx, r9", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0xd0]", 
        "lea rdx, rdx + rcx*8", 
        "sub rdx, rcx", 
        "add rdi, rdx", 
        "mov rdx, qword [rax + 0xb8]", 
        "lea rdx, rdx + rdx*4", 
        "add rdi, rdx", 
        "mov rdx, qword [rax]", 
        "mov rax, qword [rax + 0xd8]", 
        "lea rdx, rdx + rdx*2", 
        "lea rax, rax + rax*2", 
        "lea rcx, rdi + rdx*4", 
        "mov rdx, rsi", 
        "shl rax, 2", 
        "neg rdx", 
        "shl rdx, 2", 
        "sub rdx, rsi", 
        "imul rsi, rax", 
        "lea rdx, rcx + rdx*2", 
        "mov rax, rdx", 
        "sub rax, rsi", 
        "cmp rax, 0xfffffffffec707b5"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0x30]", 
        "mov rdx, qword [rax + 0x40]", 
        "mov rdi, qword [rax + 0x50]", 
        "mov r8, qword [rax + 0x148]", 
        "mov rcx, qword [rax + 0xf0]", 
        "lea rsi, rsi + rsi*4", 
        "lea rdi, rsi + rdi*8", 
        "lea rsi, rdx + rdx*4", 
        "mov rdx, qword [rax + 0x48]", 
        "lea rdi, rdi + rsi*2", 
        "lea r9, rdx*4", 
        "shl rdx, 5", 
        "sub rdx, r9", 
        "imul rdx, r8", 
        "sub rdi, rdx", 
        "lea rdx, r8 + r8*2", 
        "add rdi, rdx", 
        "mov rdx, rcx", 
        "neg rdx", 
        "shl rdx, 2", 
        "sub rdx, rcx", 
        "lea rdi, rdi + rdx*2", 
        "mov rdx, qword [rax + 0xa8]", 
        "lea rdx, rdx + rdx*4", 
        "lea rdi, rdi + rdx*2", 
        "mov rdx, qword [rax + 0x98]", 
        "lea rdx, rdx + rdx*4", 
        "lea rdx, rdi + rdx*2", 
        "sub rdx, qword [rax + 0xc0]", 
        "mov rdi, qword [rax + 0xb0]", 
        "add rsi, rdx", 
        "mov rdx, rdi", 
        "neg rdx", 
        "shl rdx, 2", 
        "sub rdx, rdi", 
        "lea rdi, rsi + rdx*2", 
        "mov rsi, qword [rax + 0xb8]", 
        "mov rdx, rsi", 
        "neg rdx", 
        "lea rdx, rsi + rdx*4", 
        "mov rsi, qword [rax + 0x100]", 
        "mov rax, qword [rax + 0xe0]", 
        "add rdx, rdi", 
        "lea rsi, rdx + rsi*4", 
        "lea rdx, rcx + rcx*8", 
        "lea rcx, rax + rax*4", 
        "lea rax, rax + rcx*2", 
        "add rdx, rsi", 
        "add rax, rdx", 
        "cmp rax, 0xfffffffffffe35d2"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0x160]", 
        "mov rdi, qword [rax + 0x68]", 
        "lea rcx, rdx*8", 
        "shl rdx, 7", 
        "sub rdx, rcx", 
        "lea rcx, rdi + rdi*2", 
        "imul rdx, qword [rax + 8]", 
        "lea rcx, rdx + rcx*4", 
        "mov rdx, qword [rax + 0x78]", 
        "lea rdx, rdx + rdx*2", 
        "lea rcx, rcx + rdx*4", 
        "mov rdx, qword [rax + 0x100]", 
        "lea rsi, rdx + rdx", 
        "shl rdx, 4", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0xe8]", 
        "add rdx, rcx", 
        "mov rcx, rsi", 
        "shl rcx, 4", 
        "sub rcx, rsi", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0xc8]", 
        "lea rcx, rcx + rcx*4", 
        "lea rsi, rdx + rcx*2", 
        "mov rcx, qword [rax + 0x128]", 
        "lea rdx, rcx + rcx*2", 
        "lea rdx, rcx + rdx*4", 
        "mov rcx, qword [rax + 0xb0]", 
        "add rdx, rsi", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rdx, rdx + rsi*4", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0xd0]", 
        "lea rdx, rdx + rcx*8", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x120]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rdx, rdx + rsi*4", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x158]", 
        "lea rsi, rcx + rcx*8", 
        "add rdx, rsi", 
        "mov rcx, rdx", 
        "lea rdx, rdi*8", 
        "sub rcx, rdi", 
        "sub rdx, rdi", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x130]", 
        "lea rcx, rcx + rcx*8", 
        "shl rcx, 2", 
        "imul rcx, qword [rax + 0x140]", 
        "sub rdx, rcx", 
        "cmp rdx, 0x132e21"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0xb8]", 
        "mov rdi, qword [rax + 0x120]", 
        "lea rcx, rdx*4", 
        "shl rdx, 5", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x40]", 
        "imul rdx, qword [rax + 0x128]", 
        "lea rcx, rcx + rcx*4", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x68]", 
        "lea rcx, rcx + rcx*2", 
        "lea rcx, rdx + rcx*2", 
        "mov rdx, qword [rax + 0x88]", 
        "mov rsi, rdx", 
        "neg rsi", 
        "lea rdx, rdx + rsi*4", 
        "lea rsi, rcx + rdx*2", 
        "mov rcx, qword [rax + 0xd0]", 
        "mov rdx, rcx", 
        "neg rdx", 
        "lea rdx, rcx + rdx*4", 
        "lea rcx, rdi + rdi", 
        "mov rdi, qword [rax + 0x18]", 
        "add rdx, rsi", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0xc8]", 
        "lea rcx, rcx + rcx*8", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x20]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*4", 
        "lea rsi, rdx + rcx*2", 
        "mov rcx, qword [rax + 0xe8]", 
        "mov rdx, rcx", 
        "neg rdx", 
        "shl rdx, 2", 
        "sub rdx, rcx", 
        "lea rcx, rdi*8", 
        "lea rdx, rsi + rdx*2", 
        "mov rsi, rdx", 
        "mov rdx, qword [rax + 0x48]", 
        "sub rsi, rcx", 
        "lea rdx, rdx + rdx*2", 
        "mov rcx, rdx", 
        "shl rcx, 5", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x98]", 
        "imul rdx, qword [rax + 0xc0]", 
        "add rdx, rsi", 
        "lea rcx, rdx + rcx*4", 
        "mov rdx, qword [rax + 0x60]", 
        "lea rsi, rdx + rdx*4", 
        "lea rdx, rdx + rsi*4", 
        "shl rdx, 2", 
        "imul rdx, qword [rax + 0x58]", 
        "mov rax, rdx", 
        "add rax, rcx", 
        "cmp rax, 0x14f5c2"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0xc0]", 
        "mov rcx, qword [rax + 0x110]", 
        "mov r8, qword [rax + 0x128]", 
        "mov rdi, qword [rax + 0x78]", 
        "mov rsi, qword [rax + 0x80]", 
        "lea rdx, rdx + rdx*8", 
        "lea r8, rdx + r8*4", 
        "lea rdx, rcx + rcx*8", 
        "shl rcx, 2", 
        "add rdx, r8", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x150]", 
        "lea r8, rdx + rdi*8", 
        "lea rdx, rcx + rcx*4", 
        "lea rcx, rdi + rdi*4", 
        "shl rdx, 3", 
        "imul rdx, qword [rax + 0x38]", 
        "add rdx, r8", 
        "lea rcx, rdx + rcx*2", 
        "imul rdx, rsi, 0x168", 
        "imul rdx, qword [rax + 0xd8]", 
        "imul rdx, qword [rax + 0x58]", 
        "sub rcx, rdx", 
        "mov rdx, rcx", 
        "mov rcx, qword [rax + 0x88]", 
        "mov rdi, rcx", 
        "neg rdi", 
        "lea rcx, rcx + rdi*4", 
        "mov rdi, qword [rax + 0x50]", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x28]", 
        "mov rax, qword [rax + 8]", 
        "lea rcx, rcx + rcx*2", 
        "lea rcx, rdx + rcx*4", 
        "mov rdx, rdi", 
        "shl rdx, 4", 
        "sub rdx, rdi", 
        "imul rsi, rdx", 
        "lea rdx, rax + rax*2", 
        "lea rdx, rax + rdx*4", 
        "sub rcx, rsi", 
        "lea rax, rcx + rdx", 
        "cmp rax, 0xfffffffffc45c2cb"
    ], 
    [
        "mov rdx, qword [r14]", 
        "mov rax, qword [rdx + 0xd0]", 
        "mov rcx, qword [rdx + 0xb8]", 
        "mov r8, qword [rdx + 0xc8]", 
        "mov rsi, qword [rdx + 0x100]", 
        "mov rbx, qword [rdx + 0x40]", 
        "mov rdi, rax", 
        "shl rdi, 4", 
        "sub rdi, rax", 
        "lea r8, rdi + r8*8", 
        "mov rdi, rcx", 
        "neg rdi", 
        "shl rdi, 2", 
        "sub rdi, rcx", 
        "add r8, rdi", 
        "mov rdi, rcx", 
        "shl rdi, 4", 
        "sub rdi, rcx", 
        "add rdi, r8", 
        "imul r8, qword [rdx + 0x30], 0x5a", 
        "imul rcx, rcx, 0x46", 
        "imul rcx, qword [rdx + 0x70]", 
        "imul r8, qword [rdx + 8]", 
        "sub rdi, r8", 
        "mov r8, rsi", 
        "neg r8", 
        "lea r8, rsi + r8*4", 
        "imul rsi, rsi, 0xfffffffffffffff3", 
        "lea rdi, rdi + r8*2", 
        "lea r8, rbx*4", 
        "sub rdi, r8", 
        "add rsi, rdi", 
        "add rax, rsi", 
        "sub rax, rcx", 
        "mov rcx, qword [rdx + 0x48]", 
        "shl rcx, 2", 
        "sub rax, rcx", 
        "mov rcx, qword [rdx + 0x98]", 
        "shl rcx, 3", 
        "sub rax, rcx", 
        "imul rcx, qword [rdx + 0x108], 0x4e", 
        "imul rcx, qword [rdx + 0x60]", 
        "sub rax, rcx", 
        "cmp rax, 0xffffffffffe2351d"
    ], 
    [
        "mov rdx, qword [r14]", 
        "mov rcx, qword [rdx + 0x48]", 
        "mov r9, qword [rdx + 0x50]", 
        "mov r8, qword [rdx + 8]", 
        "mov rax, qword [rdx + 0x130]", 
        "mov rbx, qword [rdx + 0x40]", 
        "lea rsi, rcx + rcx*2", 
        "mov rcx, qword [rdx + 0xf8]", 
        "mov rdi, rcx", 
        "neg rdi", 
        "lea rcx, rcx + rdi*4", 
        "mov rdi, r9", 
        "neg rdi", 
        "add rcx, rsi", 
        "lea rsi, r8*8", 
        "lea rdi, r9 + rdi*4", 
        "lea rcx, rsi + rcx*4", 
        "sub rsi, r8", 
        "imul rsi, qword [rdx + 0xe0]", 
        "lea rcx, rcx + rdi*2", 
        "mov rdi, qword [rdx + 0x148]", 
        "lea rcx, rcx + rax*2", 
        "lea rcx, rcx + rdi*8", 
        "sub rcx, rdi", 
        "mov rdi, qword [rdx + 0x68]", 
        "mov r10, rdi", 
        "neg r10", 
        "lea rcx, rcx + r10*4", 
        "sub rcx, rdi", 
        "lea rdi, rbx + rbx", 
        "sub rcx, rdi", 
        "mov rdi, qword [rdx + 0x80]", 
        "lea r10, rdi*4", 
        "shl rdi, 6", 
        "sub rdi, r10", 
        "imul rdi, r9", 
        "sub rcx, rdi", 
        "mov rdi, qword [rdx + 0xd8]", 
        "mov r9, rdi", 
        "neg r9", 
        "lea rdi, rdi + r9*8", 
        "add rcx, rdi", 
        "mov rdi, qword [rdx + 0xb0]", 
        "lea rdi, rdi + rdi*8", 
        "add rcx, rdi", 
        "lea rdi, rax*4", 
        "shl rax, 6", 
        "sub rax, rdi", 
        "imul rax, r8", 
        "add rax, rcx", 
        "sub rax, rsi", 
        "cmp rax, 0x6d48e"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0x118]", 
        "mov rdx, qword [rax + 0xd8]", 
        "mov rbx, qword [rax + 0x60]", 
        "mov rcx, rsi", 
        "neg rcx", 
        "lea rcx, rsi + rcx*4", 
        "add rcx, rcx", 
        "lea rsi, rcx + rsi*4", 
        "mov rcx, qword [rax + 0x110]", 
        "lea rcx, rcx + rcx*2", 
        "lea rsi, rsi + rcx*4", 
        "lea rcx, rdx + rdx*8", 
        "add rsi, rcx", 
        "mov rcx, qword [rax + 0x70]", 
        "mov rdi, rcx", 
        "neg rdi", 
        "lea rcx, rcx + rdi*4", 
        "mov rdi, qword [rax + 0x160]", 
        "add rcx, rsi", 
        "mov rsi, rdi", 
        "shl rsi, 6", 
        "sub rsi, rdi", 
        "imul rdx, rsi", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0xa0]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*8", 
        "add rcx, rdx", 
        "imul rdx, qword [rax + 0x150], 0x46", 
        "imul rdx, qword [rax + 0x128]", 
        "add rdx, rcx", 
        "imul rcx, qword [rax + 0x98], 0x9c", 
        "imul rcx, qword [rax + 0x100]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x68]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*8", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x38]", 
        "mov rax, qword [rax + 0x50]", 
        "lea rsi, rcx + rcx*2", 
        "lea rcx, rcx + rsi*4", 
        "add rdx, rcx", 
        "lea rcx, rbx + rbx", 
        "sub rdx, rcx", 
        "mov rcx, rax", 
        "neg rcx", 
        "lea rax, rax + rcx*4", 
        "lea rax, rdx + rax*4", 
        "cmp rax, 0xa038d"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0x10]", 
        "mov rdi, qword [rax + 0x28]", 
        "lea rcx, rdx*8", 
        "shl rdx, 6", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x30]", 
        "imul rdx, qword [rax + 8]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rdx, rdx + rsi*4", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x70]", 
        "lea rsi, rcx + rcx*8", 
        "lea rsi, rcx + rsi*2", 
        "lea rcx, rcx + rsi*4", 
        "imul rcx, qword [rax + 0xa0]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x48]", 
        "lea rsi, rcx + rcx*4", 
        "lea rcx, rcx + rsi*2", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x110]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*4", 
        "lea rcx, rdx + rcx*4", 
        "imul rdx, qword [rax + 0x130], 0xfffffffffffffff5", 
        "add rdx, rcx", 
        "lea rcx, rdi*8", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0xd0]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "shl rsi, 4", 
        "add rcx, rsi", 
        "add rcx, rdx", 
        "mov rdx, qword [rax + 0xe8]", 
        "lea rdx, rdx + rdx*8", 
        "shl rdx, 3", 
        "imul rdx, qword [rax + 0x148]", 
        "imul rdx, qword [rax + 0x58]", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x100]", 
        "mov rsi, rcx", 
        "shl rcx, 9", 
        "shl rsi, 4", 
        "add rcx, rsi", 
        "imul rcx, qword [rax + 0x118]", 
        "imul rcx, qword [rax + 0x90]", 
        "mov rax, rdx", 
        "sub rax, rcx", 
        "cmp rax, 0xffffffffd54c3dc9"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0xd8]", 
        "mov rdi, qword [rax + 0x40]", 
        "mov r8, qword [rax + 0x128]", 
        "mov rcx, qword [rax + 0x68]", 
        "lea rsi, rdx + rdx*4", 
        "mov rdx, qword [rax + 0xc8]", 
        "mov r9, rdx", 
        "neg r9", 
        "lea rdx, rdx + r9*4", 
        "add rsi, rdx", 
        "imul rdx, rdi, 0x6e", 
        "imul rdx, qword [rax + 0xb8]", 
        "lea rsi, rdx + rsi*2", 
        "imul rdx, qword [rax + 0x110], 0x226", 
        "imul rdx, qword [rax + 0x48]", 
        "imul rdx, r8", 
        "lea r8, r8 + r8*8", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x38]", 
        "mov r9, rsi", 
        "neg r9", 
        "lea rdx, rdx + r9*4", 
        "sub rdx, rsi", 
        "lea rsi, rcx + rcx*4", 
        "lea rsi, rcx + rsi*2", 
        "add rdx, rsi", 
        "mov rsi, r8", 
        "shl rsi, 4", 
        "sub rsi, r8", 
        "mov r8, qword [rax + 0xd0]", 
        "imul rsi, qword [rax + 0xf8]", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0x58]", 
        "imul rax, qword [rax + 0x130], 0xfffffffffffffff3", 
        "lea rsi, rsi + rsi*2", 
        "lea rsi, rdx + rsi*4", 
        "mov rdx, r8", 
        "shl rdx, 4", 
        "sub rdx, r8", 
        "add rsi, rdx", 
        "mov rdx, rdi", 
        "neg rdx", 
        "shl rdx, 3", 
        "sub rdx, rdi", 
        "add rdx, rsi", 
        "add rdx, rax", 
        "mov rax, rcx", 
        "neg rax", 
        "lea rax, rcx + rax*4", 
        "add rdx, rax", 
        "cmp rdx, 0x1db9d96b"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rcx, qword [rax + 0x118]", 
        "mov rdx, qword [rax + 0xd0]", 
        "mov rbx, qword [rax]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*8", 
        "add rcx, qword [rax + 0xe8]", 
        "mov rsi, rcx", 
        "mov rcx, qword [rax + 0x110]", 
        "lea rdi, rcx + rcx*4", 
        "lea rcx, rcx + rdi*2", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x128]", 
        "lea rsi, rsi + rsi*8", 
        "add rsi, rsi", 
        "imul rsi, rdx", 
        "imul rsi, qword [rax + 0x138]", 
        "sub rcx, rsi", 
        "lea rsi, rbx*4", 
        "mov rbx, qword [rax + 0xd8]", 
        "sub rcx, rsi", 
        "mov rsi, qword [rax + 0x40]", 
        "lea rcx, rcx + rsi*2", 
        "lea rsi, rbx*8", 
        "sub rcx, rsi", 
        "mov rsi, qword [rax + 0x158]", 
        "mov rdi, rsi", 
        "neg rdi", 
        "lea rsi, rsi + rdi*4", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x78]", 
        "lea rcx, rcx + rsi*8", 
        "sub rcx, rsi", 
        "mov rsi, qword [rax + 0xa0]", 
        "mov rax, qword [rax + 0x108]", 
        "mov rdi, rsi", 
        "shl rax, 3", 
        "imul rax, rdx", 
        "neg rdi", 
        "imul rdx, rdx, 0xfffffffffffffff3", 
        "lea rsi, rsi + rdi*8", 
        "add rcx, rsi", 
        "sub rcx, rax", 
        "add rdx, rcx", 
        "cmp rdx, 0xfffffffffed2f3b8"
    ], 
    [
        "mov rax, qword [r14]", 
        "imul rcx, qword [rax + 0xc0], 0xb6", 
        "mov rdi, qword [rax + 0xf0]", 
        "mov r8, qword [rax + 0x100]", 
        "mov rdx, qword [rax + 0x88]", 
        "imul rcx, qword [rax]", 
        "imul rcx, qword [rax + 0x50]", 
        "mov rsi, rcx", 
        "lea rcx, rdi + rdi", 
        "shl rdi, 3", 
        "imul rcx, r8", 
        "add rcx, rsi", 
        "mov rsi, qword [rax + 0x138]", 
        "mov r9, rsi", 
        "neg r9", 
        "lea rcx, rcx + r9*4", 
        "sub rcx, rsi", 
        "lea rsi, r8 + r8*4", 
        "lea rcx, rcx + rsi*2", 
        "mov rsi, qword [rax + 0x110]", 
        "lea rcx, rcx + rdx*8", 
        "imul rdx, rdx, 0x478", 
        "sub rcx, rdi", 
        "lea rsi, rcx + rsi*4", 
        "mov rcx, qword [rax + 0xe8]", 
        "imul rdx, qword [rax + 0x20]", 
        "mov rdi, rcx", 
        "neg rdi", 
        "lea rcx, rcx + rdi*4", 
        "imul rdx, qword [rax + 0x40]", 
        "lea rcx, rsi + rcx*4", 
        "mov rsi, qword [rax + 0x148]", 
        "lea rdi, rsi + rsi*4", 
        "lea rsi, rsi + rdi*2", 
        "lea rsi, rsi + rsi*4", 
        "imul rsi, qword [rax + 0x60]", 
        "sub rcx, rsi", 
        "lea rax, rcx + rdx", 
        "cmp rax, 0x52574fdf"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdi, qword [rax + 0x110]", 
        "mov rsi, qword [rax + 0x160]", 
        "mov rdx, qword [rax + 0xa8]", 
        "mov rcx, qword [rax + 0x20]", 
        "mov rbx, qword [rax + 0x28]", 
        "lea r8, rsi + rsi*2", 
        "mov rsi, rdi", 
        "neg rsi", 
        "shl rsi, 2", 
        "sub rsi, rdi", 
        "lea rdi, rsi + r8*2", 
        "imul rsi, rdx, 0xfffffffffffffff5", 
        "add rsi, rdi", 
        "mov rdi, rcx", 
        "neg rdi", 
        "lea rdi, rcx + rdi*8", 
        "lea rsi, rsi + rdi*2", 
        "lea rdi, rbx*8", 
        "sub rsi, rdi", 
        "lea rdi, rcx + rcx*4", 
        "lea rcx, rcx + rdi*4", 
        "shl rcx, 6", 
        "imul rcx, qword [rax + 0x138]", 
        "imul rdx, rcx", 
        "mov rcx, qword [rax + 0x140]", 
        "lea rcx, rcx + rcx*4", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 8]", 
        "add rcx, rdx", 
        "mov rdx, rsi", 
        "shl rdx, 4", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0xd0]", 
        "add rdx, rcx", 
        "mov rcx, rsi", 
        "shl rcx, 4", 
        "sub rcx, rsi", 
        "mov rsi, qword [rax + 0x68]", 
        "imul rcx, qword [rax + 0xd8]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x18]", 
        "lea rcx, rcx + rcx*8", 
        "add rdx, rcx", 
        "mov rcx, rsi", 
        "neg rcx", 
        "shl rcx, 2", 
        "sub rcx, rsi", 
        "lea rsi, rdx + rcx*2", 
        "mov rcx, qword [rax + 0x80]", 
        "lea rdx, rcx + rcx*4", 
        "lea rdx, rcx + rdx*2", 
        "mov rcx, qword [rax + 0x88]", 
        "add rdx, rsi", 
        "lea rax, rdx + rcx*8", 
        "sub rax, rcx", 
        "cmp rax, 0x5425783b"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0xa0]", 
        "mov rdi, qword [rax + 0x160]", 
        "mov rcx, qword [rax + 0x58]", 
        "mov rdx, rsi", 
        "neg rdx", 
        "add rdx, qword [rax + 0x30]", 
        "lea rdx, rsi + rdx*4", 
        "lea rsi, rsi + rsi*2", 
        "lea rdx, rdx + rdi*8", 
        "sub rdx, rdi", 
        "imul rdi, qword [rax + 0x120], 0x5a", 
        "imul rdi, qword [rax + 0x68]", 
        "sub rdx, rdi", 
        "mov rdi, qword [rax + 0x108]", 
        "lea r8, rdi + rdi*2", 
        "lea rdi, rdi + r8*4", 
        "add rdx, rdi", 
        "lea rdx, rdx + rsi*2", 
        "mov rsi, qword [rax + 0x128]", 
        "mov rdi, rsi", 
        "neg rdi", 
        "lea rdx, rdx + rdi*4", 
        "sub rdx, rsi", 
        "mov rsi, rdx", 
        "mov rdx, qword [rax + 0x38]", 
        "lea rdx, rdx + rdx*4", 
        "shl rdx, 2", 
        "imul rdx, qword [rax + 0x100]", 
        "imul rdx, rcx", 
        "imul rcx, rcx, 0x9c", 
        "imul rcx, qword [rax + 0xb8]", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x48]", 
        "mov rdi, rsi", 
        "neg rdi", 
        "lea rdx, rdx + rdi*4", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0xe8]", 
        "lea rdi, rdx + rsi*2", 
        "mov rsi, qword [rax]", 
        "mov rdx, rsi", 
        "neg rdx", 
        "shl rdx, 2", 
        "sub rdx, rsi", 
        "lea rdx, rdi + rdx*2", 
        "lea rax, rdx + rcx", 
        "cmp rax, 0x5b43ac"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rdx, qword [rax + 0x88]", 
        "mov rbx, qword [rax + 0x140]", 
        "mov rcx, qword [rax + 0x70]", 
        "lea rsi, rdx*4", 
        "lea rdi, rbx + rbx", 
        "imul rsi, qword [rax + 0xb8]", 
        "imul rdx, rdx, 0xfffffffffffffff3", 
        "sub rsi, rdi", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x30]", 
        "add rdx, qword [rax + 0x150]", 
        "lea rdi, rsi + rsi*2", 
        "lea rsi, rsi + rdi*4", 
        "lea rdi, rcx*8", 
        "add rdx, rsi", 
        "mov rsi, rdi", 
        "sub rsi, rcx", 
        "add rcx, rdi", 
        "add rdx, rsi", 
        "add rcx, rdx", 
        "mov rdx, qword [rax + 8]", 
        "lea rsi, rdx + rdx", 
        "shl rdx, 4", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0x68]", 
        "add rdx, rcx", 
        "lea rcx, rsi + rsi*4", 
        "shl rcx, 3", 
        "sub rcx, rsi", 
        "imul rcx, qword [rax + 0x28]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x98]", 
        "mov rsi, rcx", 
        "neg rsi", 
        "lea rcx, rcx + rsi*8", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x100]", 
        "lea rcx, rcx + rcx*2", 
        "lea rdx, rdx + rcx*2", 
        "mov rcx, qword [rax + 0xe8]", 
        "lea rdx, rdx + rcx*4", 
        "sub rdx, qword [rax + 0x128]", 
        "mov rax, qword [rax + 0xc0]", 
        "lea rcx, rax + rax", 
        "shl rax, 4", 
        "sub rax, rcx", 
        "add rax, rdx", 
        "cmp rax, 0xfffffffffffbfd2c"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0x70]", 
        "mov rdi, qword [rax + 0x160]", 
        "mov rdx, qword [rax + 0xd8]", 
        "mov rcx, qword [rax + 8]", 
        "lea rsi, rsi + rsi*4", 
        "add rsi, rsi", 
        "imul rsi, qword [rax + 0x48]", 
        "lea r8, rsi + rdi*8", 
        "mov rdi, qword [rax + 0x68]", 
        "mov rsi, rdi", 
        "neg rsi", 
        "lea rsi, rdi + rsi*4", 
        "imul rdi, qword [rax + 0xd0], 0x5a", 
        "add rsi, r8", 
        "imul rdi, qword [rax + 0x38]", 
        "sub rsi, rdi", 
        "mov rdi, rdx", 
        "neg rdi", 
        "lea rdi, rdx + rdi*4", 
        "lea rdi, rsi + rdi*2", 
        "lea rsi, rcx + rcx*4", 
        "lea rsi, rcx + rsi*2", 
        "lea rcx, rcx + rcx*2", 
        "add rsi, rdi", 
        "lea rdi, rdx + rdx*2", 
        "lea rsi, rsi + rdi*2", 
        "mov rdi, qword [rax + 0xc0]", 
        "lea rsi, rsi + rdi*2", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x108]", 
        "sub rdx, qword [rax + 0xe8]", 
        "add rdx, qword [rax + 0x50]", 
        "imul rax, qword [rax + 0x58], 0xfffffffffffffff3", 
        "mov rdi, rsi", 
        "neg rdi", 
        "lea rdx, rdx + rdi*8", 
        "sub rdx, rsi", 
        "lea rdx, rdx + rcx*2", 
        "add rax, rdx", 
        "cmp rax, 0xfffffffffff768c0"
    ], 
    [
        "mov rax, qword [r14]", 
        "imul rdi, qword [rax + 0xf0], 0x46", 
        "mov r9, qword [rax + 0xe8]", 
        "mov rdx, qword [rax + 0x140]", 
        "mov rbx, qword [rax + 0x30]", 
        "mov rcx, qword [rax + 0x158]", 
        "mov r8, qword [rax + 0x60]", 
        "imul rdi, qword [rax + 0x130]", 
        "mov rsi, r9", 
        "neg rsi", 
        "shl rsi, 2", 
        "sub rsi, r9", 
        "lea rsi, rdi + rsi*2", 
        "lea rdi, rdx + rdx", 
        "sub rsi, rdi", 
        "mov rdi, qword [rax + 0xe0]", 
        "mov r9, rdi", 
        "neg r9", 
        "lea rdi, rdi + r9*4", 
        "lea rsi, rsi + rdi*2", 
        "lea rdi, rbx*8", 
        "imul rdi, rcx", 
        "sub rsi, rdi", 
        "imul rdi, qword [rax + 0x48], 0xfffffffffffffff5", 
        "add rsi, r8", 
        "add r8, r8", 
        "add rsi, rdi", 
        "mov rdi, qword [rax + 0xc8]", 
        "lea rdi, rdi + rdi*4", 
        "lea rsi, rsi + rdi*2", 
        "mov rdi, rdx", 
        "shl rdx, 8", 
        "shl rdi, 5", 
        "sub rdx, rdi", 
        "sub rsi, r8", 
        "imul rdx, rcx", 
        "imul rdx, qword [rax + 0x18]", 
        "imul rcx, qword [rax + 0xd8], 0xfffffffffffffff5", 
        "mov rax, qword [rax + 0xc0]", 
        "sub rsi, rdx", 
        "mov rdx, rsi", 
        "add rdx, rcx", 
        "mov rcx, rax", 
        "neg rcx", 
        "lea rax, rax + rcx*8", 
        "add rdx, rax", 
        "cmp rdx, 0xfffffffff010a0b7"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov rsi, qword [rax + 0x50]", 
        "mov r8, qword [rax + 0x148]", 
        "mov rcx, qword [rax + 0x90]", 
        "mov rdi, qword [rax + 0xe8]", 
        "mov rdx, rsi", 
        "shl rdx, 4", 
        "sub rdx, rsi", 
        "mov rsi, qword [rax + 0x88]", 
        "lea rdx, rdx + r8*4", 
        "lea rsi, rdx + rsi*2", 
        "mov rdx, rcx", 
        "neg rdx", 
        "shl rdx, 4", 
        "add rdx, rcx", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x80]", 
        "lea rsi, rsi + rsi*4", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0xa0]", 
        "mov r8, rsi", 
        "neg r8", 
        "lea rsi, rsi + r8*8", 
        "mov r8, qword [rax + 0xf0]", 
        "add rdx, rsi", 
        "mov rsi, r8", 
        "add rdx, rdi", 
        "neg rsi", 
        "shl rsi, 2", 
        "sub rsi, r8", 
        "lea rsi, rdx + rsi*2", 
        "mov rdx, qword [rax + 0xc0]", 
        "mov r8, rdx", 
        "neg r8", 
        "lea rdx, rdx + r8*4", 
        "mov r8, qword [rax + 0xe0]", 
        "lea rsi, rsi + rdx*2", 
        "lea rdx, r8 + r8*2", 
        "lea rdx, r8 + rdx*4", 
        "add rsi, rdx", 
        "mov rdx, qword [rax]", 
        "lea r8, rdx + rdx*2", 
        "lea rdx, rdx + r8*4", 
        "add rdx, rsi", 
        "mov rsi, qword [rax + 0x158]", 
        "lea rsi, rsi + rsi*2", 
        "shl rsi, 4", 
        "imul rcx, rsi", 
        "sub rdx, rcx", 
        "lea rcx, rdi + rdi*2", 
        "lea rcx, rdi + rcx*4", 
        "add rdx, rcx", 
        "mov rcx, qword [rax + 0x38]", 
        "imul rax, qword [rax + 0x30], 0xfffffffffffffff5", 
        "add rcx, rcx", 
        "sub rdx, rcx", 
        "add rdx, rax", 
        "cmp rdx, 0xfffffffffff70c87"
    ], 
    [
        "mov rax, qword [r14]", 
        "mov r8, qword [rax]", 
        "mov rcx, qword [rax + 0x18]", 
        "mov rdi, qword [rax + 0x158]", 
        "mov rsi, qword [rax + 0x60]", 
        "mov r9, r8", 
        "mov rdx, r8", 
        "shl r9, 5", 
        "shl rdx, 8", 
        "sub rdx, r9", 
        "mov r9, qword [rax + 0x120]", 
        "add rdx, r8", 
        "imul rdx, rcx", 
        "mov r10, r9", 
        "neg r10", 
        "lea r9, r9 + r10*4", 
        "lea r9, rdx + r9*4", 
        "mov rdx, rcx", 
        "neg rdx", 
        "lea rdx, rcx + rdx*8", 
        "mov rcx, qword [rax + 0x38]", 
        "add rdx, r9", 
        "lea rcx, rcx + rcx*2", 
        "shl rcx, 2", 
        "imul rcx, rdi", 
        "sub rdx, rcx", 
        "mov rcx, rdi", 
        "neg rcx", 
        "lea rcx, rdi + rcx*4", 
        "lea rdi, rsi + rsi", 
        "lea rdx, rdx + rcx*4", 
        "mov rcx, qword [rax + 0xe8]", 
        "add rsi, rdi", 
        "add rdx, rdi", 
        "lea rcx, rcx + rcx*8", 
        "sub rdx, r8", 
        "add rcx, rcx", 
        "imul rcx, qword [rax + 0x20]", 
        "sub rdx, rcx", 
        "mov rcx, qword [rax + 0x10]", 
        "lea r8, rcx + rcx*4", 
        "mov rcx, r8", 
        "shl rcx, 4", 
        "sub rcx, r8", 
        "imul rcx, qword [rax + 0xa8]", 
        "imul rcx, qword [rax + 0x58]", 
        "sub rdx, rcx", 
        "lea rcx, rdx + rsi*4", 
        "mov rdx, qword [rax + 0xc8]", 
        "mov rax, rdx", 
        "shl rax, 4", 
        "sub rax, rdx", 
        "add rax, rcx", 
        "cmp rax, 0xfffffffffe1ef331"
    ]
]